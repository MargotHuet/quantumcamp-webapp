name: CI Workflow

on:
  push:
    paths:
      - 'frontend/**'
      - 'backend/**'
  pull_request:
    paths:
      - 'frontend/**'
      - 'backend/**'

jobs:
  front-end:
    runs-on: ubuntu-latest
    if: github.event_name == 'push' || github.event_name == 'pull_request'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Set up Node.js for front-end
        uses: actions/setup-node@v4
        with:
          node-version: '18.17.0'

      - name: Cache Node.js modules
        uses: actions/cache@v3
        with:
          path: frontend/node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('frontend/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
          
      - name: Install front-end dependencies
        run: |
          cd frontend
          npm install
          npm install @supabase/supabase-js --save 

      - name: Lint the frontend
        run: |
          cd frontend
          npm run lint

      - name: Run tests
        run: |
          cd frontend
          npm run test

      - name: Build the frontend
        env:
            NEXT_PUBLIC_SUPABASE_URL: ${{ secrets.NEXT_PUBLIC_SUPABASE_URL }}
            NEXT_PUBLIC_SUPABASE_ANON_KEY: ${{ secrets.NEXT_PUBLIC_SUPABASE_ANON_KEY }}
        run: |
          cd frontend
          npm run build

  back-end:
    runs-on: ubuntu-latest
    if: github.event_name == 'push' || github.event_name == 'pull_request'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js for back-end
        uses: actions/setup-node@v4
        with:
          node-version: '18.17.0'

      - name: Cache Node.js modules
        uses: actions/cache@v3
        with:
          path: backend/node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('backend/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies
        run: npm install
        working-directory: ./backend

      - name: Lint the backend
        run: |
          cd backend
          npm run lint